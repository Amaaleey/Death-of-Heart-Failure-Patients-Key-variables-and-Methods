{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8178644,"sourceType":"datasetVersion","datasetId":4841541}],"dockerImageVersionId":30702,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-04-20T23:01:44.047767Z","iopub.execute_input":"2024-04-20T23:01:44.048159Z","iopub.status.idle":"2024-04-20T23:01:44.060747Z","shell.execute_reply.started":"2024-04-20T23:01:44.048129Z","shell.execute_reply":"2024-04-20T23:01:44.059572Z"},"trusted":true},"execution_count":10,"outputs":[{"name":"stdout","text":"/kaggle/input/heartfailure/heartfailure6.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)","metadata":{"execution":{"iopub.status.busy":"2024-04-20T22:55:43.515993Z","iopub.execute_input":"2024-04-20T22:55:43.516391Z","iopub.status.idle":"2024-04-20T22:55:43.521740Z","shell.execute_reply.started":"2024-04-20T22:55:43.516361Z","shell.execute_reply":"2024-04-20T22:55:43.520518Z"},"trusted":true},"execution_count":5,"outputs":[]},{"cell_type":"code","source":"heart_failure =pd.read_csv(\"/kaggle/input/heartfailure/heartfailure6.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-04-20T23:01:50.782601Z","iopub.execute_input":"2024-04-20T23:01:50.783385Z","iopub.status.idle":"2024-04-20T23:01:50.798492Z","shell.execute_reply.started":"2024-04-20T23:01:50.783351Z","shell.execute_reply":"2024-04-20T23:01:50.797162Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"code","source":"heart_failure.info()","metadata":{"execution":{"iopub.status.busy":"2024-04-20T23:02:04.082082Z","iopub.execute_input":"2024-04-20T23:02:04.083224Z","iopub.status.idle":"2024-04-20T23:02:04.111767Z","shell.execute_reply.started":"2024-04-20T23:02:04.083186Z","shell.execute_reply":"2024-04-20T23:02:04.110579Z"},"trusted":true},"execution_count":12,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 299 entries, 0 to 298\nData columns (total 13 columns):\n #   Column                    Non-Null Count  Dtype  \n---  ------                    --------------  -----  \n 0   age                       240 non-null    float64\n 1   anaemia                   299 non-null    int64  \n 2   creatinine_phosphokinase  270 non-null    float64\n 3   diabetes                  270 non-null    float64\n 4   ejection_fraction         270 non-null    float64\n 5   high_blood_pressure       240 non-null    float64\n 6   platelets                 299 non-null    float64\n 7   serum_creatinine          299 non-null    float64\n 8   serum_sodium              299 non-null    int64  \n 9   sex                       270 non-null    float64\n 10  smoking                   299 non-null    int64  \n 11  time                      299 non-null    int64  \n 12  DEATH_EVENT               291 non-null    float64\ndtypes: float64(9), int64(4)\nmemory usage: 30.5 KB\n","output_type":"stream"}]}]}